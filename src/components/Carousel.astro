---
// 轮播图
import { url } from "../utils/url-utils";

interface Props {
  id?: string;
  // images?: Array<{ src: string; alt?: string }>;
  images?: Array<{src: string}>;
  
  interval?: number;
  class?: string;
}

const { id, images = [], interval, class: className } = Astro.props;

// 如果没有提供图片，使用默认API
// const defaultImages = [
//   { src: "https://t.alcy.cc/moez", alt: "Random image" }
// ];
const defaultImages = [
  { src: "https://t.alcy.cc/moez"}
];


const carouselImages = images.length > 0 ? images : defaultImages;
---


<div id={id} class:list={[className, 'carousel-container']} data-interval={interval} >
  <div class="carousel-slides">
    {carouselImages.map((image, index) => (
      <div 
        class:list={['carousel-slide', index === 0 && 'active']} 
        data-index={index}
      >
        {/* <img 
          src={image.src.startsWith('/') ? url(image.src) : image.src} 
          alt={image.alt || ''} 
          class="carousel-image"
          loading={index === 0 ? 'eager' : 'lazy'}
        /> */}
          <img 
          src={image.src.startsWith('/') ? url(image.src) : image.src} 
          class="carousel-image"
          loading={index === 0 ? 'eager' : 'lazy'}
        />
      </div>
    ))}
  </div>
  
  {carouselImages.length > 1 && (
    <>
      <button class="carousel-control prev">‹</button>
      <button class="carousel-control next">›</button>
      {/* 小圆点, 没什么用目前, 被遮挡住了 */}
      <div class="carousel-indicators">
        {carouselImages.map((_, index) => (
          <button 
            class:list={['carousel-indicator', index === 0 && 'active']} 
            aria-label={`Go to slide ${index + 1}`}
            data-index={index}
          ></button>
        ))}
      </div>
    </>
  )}
</div>

<style>
  .carousel-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  
  .carousel-slides {
  display: flex;
  transition: transform 0.8s ease-in-out;
  width: 100%;
  height: 100%;
}

.carousel-slide {
  flex: 0 0 100%;
  width: 100%;
  height: 100%;
  position: relative;
  opacity: 1;
  transform: none;
}

  
  .carousel-slide.active {
    opacity: 1;
    z-index: 1;
  }
  
  .carousel-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;
    background: rgba(0, 0, 0, 0.3);
    color: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 20px;
    transition: background 0.3s;
  }
  
  .carousel-control:hover {
    background: rgba(0, 0, 0, 0.6);
  }
  
  .carousel-control.prev {
    left: 15px;
    display: none;
  }
  
  .carousel-control.next {
    right: 15px;
    display: none;
  }
  
  .carousel-indicators {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    display: flex;
    gap: 8px;
  }
  
  .carousel-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    background: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    transition: background 0.3s;
  }
  
  .carousel-indicator.active {
    background: rgba(255, 255, 255, 1);
  }
</style>

<script>

    document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.querySelector('.carousel-container');
    if (!carousel) return;
    
    const slides=carousel.querySelector('.carousel-slides'); 
    const slide = carousel.querySelectorAll('.carousel-slide');
    const indicators = carousel.querySelectorAll('.carousel-indicator');
    const prevBtn = carousel.querySelector('.carousel-control.prev');
    const nextBtn = carousel.querySelector('.carousel-control.next');   
    
    if (slide.length <= 1) return;
    
    let currentIndex = 0;
    let intervalId: number | null = null;
    const intervalTime = Number((carousel as HTMLElement).dataset.interval)||7500;

    // 切换到指定索引的幻灯片
    function goToSlide(index: number) {
        
        if (index >= slide.length) index = 0;
        if (index < 0) index = slide.length - 1;
        const offset = -index * 100;
        if (slides instanceof HTMLElement) {
            slides.style.transform = `translateX(${offset}%)`;
        }

        if (indicators[currentIndex]) {
          indicators[currentIndex].classList.remove('active');
        }
        currentIndex = index;
        if (indicators[currentIndex]) {
          indicators[currentIndex].classList.add('active');
        }

    }
    
    // 下一张幻灯片
    function nextSlide() {
      goToSlide(currentIndex + 1);
    }
    
    // 开始自动轮播
    function startAutoPlay() {
      if (intervalId) clearInterval(intervalId);
      intervalId = window.setInterval(nextSlide, intervalTime);
    }
    
    // 停止自动轮播
    function stopAutoPlay() {
      if (intervalId) {
        clearInterval(intervalId);
        intervalId = null;
      }
    }
    
    // 前进和后退按钮
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        stopAutoPlay();
        goToSlide(currentIndex - 1);
        startAutoPlay();
      });
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        stopAutoPlay();
        nextSlide();
        startAutoPlay();
      });
    }
    
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        stopAutoPlay();
        goToSlide(index);
        startAutoPlay();
      });
    });
    
    carousel.addEventListener('mouseenter', stopAutoPlay);
    carousel.addEventListener('mouseleave', startAutoPlay);
    
    startAutoPlay();
  });
</script>